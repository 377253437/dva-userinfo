import _extends from "@babel/runtime/helpers/esm/extends";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import * as React from 'react';
import classNames from 'classnames';
import Progress from '../../progress';
import { getSuitableFileUnit, formatSizeToSuitableUnit } from '../utils';
var ItemProgress = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _classNames;

  var type = _ref.type,
      prefixCls = _ref.prefixCls,
      locale = _ref.locale,
      file = _ref.file,
      cancelIcon = _ref.cancelIcon,
      errorDom = _ref.errorDom,
      progressProps = _ref.progress,
      className = _ref.className;
  var progressClassName = classNames((_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-list-item-progress"), true), _defineProperty(_classNames, "".concat(prefixCls, "-list-item-progress-type-").concat(type), true), _classNames), className);

  if (type === 'picture') {
    return /*#__PURE__*/React.createElement("div", {
      className: progressClassName,
      ref: ref
    }, 'percent' in file ? /*#__PURE__*/React.createElement(Progress, _extends({
      width: 20,
      strokeWidth: 10,
      type: "circle",
      status: file.status === 'error' ? 'exception' : 'normal'
    }, progressProps, {
      percent: file.percent
    })) : null, file.status === 'error' ? errorDom : cancelIcon);
  }

  var fileSizeUnit = getSuitableFileUnit(file.size || 0);
  return /*#__PURE__*/React.createElement("div", {
    className: progressClassName,
    ref: ref
  }, file.status === 'uploading' && /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefixCls, "-list-item-status")
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", null, locale.uploading), file.size && 'percent' in file ? /*#__PURE__*/React.createElement("span", null, " ".concat(formatSizeToSuitableUnit(file.size * (file.percent || 0) / 100, fileSizeUnit), " "), "/ ", formatSizeToSuitableUnit(file.size, fileSizeUnit)) : null), cancelIcon), file.status === 'error' && errorDom, 'percent' in file || file.status === 'error' ? /*#__PURE__*/React.createElement(Progress, _extends({
    type: "line",
    strokeWidth: 2,
    status: file.status === 'error' ? 'exception' : 'normal'
  }, progressProps, {
    percent: file.status === 'error' ? 100 : file.percent
  })) : null);
});
export default ItemProgress;