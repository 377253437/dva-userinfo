import _extends from "@babel/runtime/helpers/esm/extends";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import * as React from 'react';
import classNames from 'classnames';
import UploadOutlined from "@sensd/icons/es/icons/UploadOutlined";
import Button from '../button';
import Tooltip from '../tooltip';
import LocaleReceiver from '../locale-provider/LocaleReceiver';
import defaultLocale from '../locale/default';
import replaceMessage from '../locale/utils';
import UploadContext from './context';
var Trigger = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _classNames;

  var title = _ref.title,
      children = _ref.children;

  var _React$useContext = React.useContext(UploadContext),
      type = _React$useContext.type,
      prefixCls = _React$useContext.prefixCls,
      direction = _React$useContext.direction,
      disabled = _React$useContext.disabled,
      _React$useContext$max = _React$useContext.maxCount,
      maxCount = _React$useContext$max === void 0 ? Number.MAX_SAFE_INTEGER : _React$useContext$max,
      _React$useContext$fil = _React$useContext.fileCount,
      fileCount = _React$useContext$fil === void 0 ? 0 : _React$useContext$fil,
      propLocale = _React$useContext.propLocale,
      setDefaultTrigger = _React$useContext.setDefaultTrigger;

  React.useEffect(function () {
    setDefaultTrigger(true);
  }, []);
  var btnClass = classNames((_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-trigger"), true), _defineProperty(_classNames, "".concat(prefixCls, "-trigger-type-").concat(type), true), _defineProperty(_classNames, "".concat(prefixCls, "-trigger-disabled"), disabled || maxCount <= fileCount), _defineProperty(_classNames, "".concat(prefixCls, "-trigger-rtl"), direction === 'rtl'), _classNames)); // when is single picture and has uploaded, hide button if type is picture.

  var isSinglePictureUploaded = fileCount === 1 && maxCount === 1 && (type === 'picture' || type === 'drag');

  if (type === 'picture' && isSinglePictureUploaded) {
    return null;
  }

  return /*#__PURE__*/React.createElement(LocaleReceiver, {
    componentName: "Upload",
    defaultLocale: defaultLocale.Upload
  }, function (locale) {
    var _Object$assign = _extends(_extends({}, locale), propLocale),
        triggerBtnTitle = _Object$assign.triggerBtnTitle,
        triggerDragTitle = _Object$assign.triggerDragTitle,
        triggerPictureTitle = _Object$assign.triggerPictureTitle,
        maxCountTip = _Object$assign.maxCountTip; // Tooltip won't hide at disabled button, so
    // Tooltip fix this bug by judging whether it's children is disabled button and do something to fix it.


    var dom = type === 'button' ? /*#__PURE__*/React.createElement(Button, {
      className: btnClass,
      ref: ref,
      disabled: disabled || maxCount <= fileCount
    }, title || triggerBtnTitle) : /*#__PURE__*/React.createElement("div", {
      className: btnClass,
      ref: ref
    }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(UploadOutlined, null), /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-trigger-title")
    }, title || (type === 'picture' ? triggerPictureTitle : triggerDragTitle)), type === 'drag' && children ? /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-trigger-tip")
    }, children) : null));

    if (!isSinglePictureUploaded && maxCount <= fileCount) {
      return /*#__PURE__*/React.createElement(Tooltip, {
        title: replaceMessage(maxCountTip, {
          num: "".concat(maxCount)
        })
      }, dom);
    }

    return dom;
  });
});
export default Trigger;