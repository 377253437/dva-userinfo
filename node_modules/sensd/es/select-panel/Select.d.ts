import React from 'react';
import { FieldNames } from '@sensd/rc-select/lib/Select';
import { ScrollTo } from 'rc-virtual-list/lib/List';
import { RawValueType } from '@sensd/rc-select/lib/BaseSelect';
import { FlattenOptionData } from '@sensd/rc-select/lib/interface';
import { SelectOptionProps } from './SelectOption';
export interface InternalSelectRef {
    scrollTo: ScrollTo;
}
export declare type SelectOnChange<ValueType = any> = (value: ValueType, options: SelectOptionProps | SelectOptionProps[]) => void;
export interface SelectProps<ValueType = any> {
    listHeight?: number;
    prefixCls?: string;
    query?: string | undefined;
    queryString: string | undefined;
    multiple?: boolean;
    disabled?: boolean;
    onChange?: SelectOnChange;
    options?: SelectOptionProps[];
    selectGroupType?: 'line' | 'box';
    defaultValue?: ValueType;
    value?: ValueType;
    onListChange?: (flattenOptions: FlattenOptionData<SelectOptionProps>[]) => void;
    fieldNames?: FieldNames;
    valueOptions?: Map<RawValueType, SelectOptionProps>;
    onClick?: (value: ValueType, checked: boolean) => void;
    maxCount?: number;
    children?: React.ReactNode;
    virtual?: boolean;
    listItemHeight?: number;
}
declare const _default: React.ForwardRefExoticComponent<SelectProps<any> & React.RefAttributes<any>>;
export default _default;
