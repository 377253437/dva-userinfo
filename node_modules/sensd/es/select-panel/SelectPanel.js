import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useContext, useState, useRef } from 'react';
import LeftOutlined from "@sensd/icons/es/icons/LeftOutlined";
import classNames from 'classnames';
import { ConfigContext } from '../config-provider';
import LocaleReceiver from '../locale-provider/LocaleReceiver';
import defaultLocale from '../locale/default';
import Input from '../input';
import Checkbox from '../checkbox';
import Tooltip from '../tooltip';
import { isValidElement } from '../_util/reactNode';
import Divider from '../divider';
import { NoFormStyle } from '../form/context';
var SHOW_TOTAL_MIN_COUNT = 9;

var SelectPanel = function SelectPanel(props) {
  var customizePrefixCls = props.prefixCls,
      _props$showSearch = props.showSearch,
      showSearch = _props$showSearch === void 0 ? false : _props$showSearch,
      searchSuffix = props.searchSuffix,
      _props$statistics = props.statistics,
      statistics = _props$statistics === void 0 ? false : _props$statistics,
      customLeftOpt = props.customLeftOpt,
      customRightOpt = props.customRightOpt,
      multiple = props.multiple,
      _props$showCheckAll = props.showCheckAll,
      showCheckAll = _props$showCheckAll === void 0 ? true : _props$showCheckAll,
      _props$footer = props.footer,
      footer = _props$footer === void 0 ? false : _props$footer,
      children = props.children,
      onCheckAll = props.onCheckAll,
      indeterminate = props.indeterminate,
      checkAll = props.checkAll,
      query = props.query,
      onSearch = props.onSearch,
      _props$count = props.count,
      count = _props$count === void 0 ? 0 : _props$count,
      customContent = props.customContent,
      noResult = props.noResult,
      disableCheckAll = props.disableCheckAll,
      placeholder = props.placeholder,
      selectAllText = props.selectAllText,
      contentStyle = props.contentStyle;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      focused = _useState2[0],
      setFocused = _useState2[1];

  var inputRef = useRef(null);

  var _useContext = useContext(ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = getPrefixCls('select-panel', customizePrefixCls);

  var handleBack = function handleBack() {
    var _a;

    onSearch === null || onSearch === void 0 ? void 0 : onSearch('');
    setFocused(true);
    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
  };

  var handleSearch = function handleSearch(e) {
    var searchVal = e.target.value;
    onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchVal);
  };

  var defaultStatistics = function defaultStatistics(locale) {
    var text = ''; // 搜索无数据，或者总数据小于9条。不显示统计区

    if (count === 0 || !query && count < SHOW_TOTAL_MIN_COUNT) {
      return null;
    }

    if (query) {
      text = locale.searchCount.replace(/\${count}/, count);
    } else {
      text = locale.totalCount.replace(/\${count}/, count);
    }

    return /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-statistics")
    }, text);
  };

  var defaultFooter = function defaultFooter(locale) {
    return /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-footer")
    }, /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-operate-left")
    }, customLeftOpt || multiple && showCheckAll && /*#__PURE__*/React.createElement(Checkbox, {
      indeterminate: indeterminate,
      onChange: onCheckAll,
      checked: checkAll,
      disabled: disableCheckAll
    }, selectAllText || locale.selectAll)), /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-operate-right")
    }, customRightOpt));
  };

  var renderFooter = function renderFooter() {
    if (footer === false || count === 0 || query) return null;

    if (footer !== true) {
      return /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "-footer")
      }, footer);
    }

    return /*#__PURE__*/React.createElement(LocaleReceiver, {
      componentName: "SelectPanel",
      defaultLocale: defaultLocale.SelectPanel
    }, defaultFooter);
  };

  var renderStatistics = function renderStatistics() {
    if (statistics === false) return null;

    if (statistics !== true) {
      return /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "-statistics")
      }, statistics);
    }

    return /*#__PURE__*/React.createElement(LocaleReceiver, {
      componentName: "SelectPanel",
      defaultLocale: defaultLocale.SelectPanel
    }, defaultStatistics);
  };

  var backNode = function backNode(locale) {
    return /*#__PURE__*/React.createElement(Tooltip, {
      title: locale.back
    }, /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-back-icon")
    }, /*#__PURE__*/React.createElement(LeftOutlined, {
      onClick: handleBack
    }), /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-back-line")
    })));
  };

  var onKeyDownDisable = function onKeyDownDisable(e) {
    e.stopPropagation();
  };

  if (isValidElement(customContent)) {
    return /*#__PURE__*/React.createElement("div", {
      className: prefixCls
    }, customContent);
  }

  return /*#__PURE__*/React.createElement("div", {
    className: classNames(_defineProperty({}, "".concat(prefixCls, "-width-search"), showSearch), prefixCls)
  }, showSearch && /*#__PURE__*/React.createElement("div", {
    className: classNames(_defineProperty({}, "".concat(prefixCls, "-search-focused"), focused), "".concat(prefixCls, "-header-search")),
    onKeyDown: onKeyDownDisable
  }, query && /*#__PURE__*/React.createElement(LocaleReceiver, {
    componentName: "SelectPanel",
    defaultLocale: defaultLocale.SelectPanel
  }, backNode), /*#__PURE__*/React.createElement(LocaleReceiver, {
    componentName: "SelectPanel",
    defaultLocale: defaultLocale.global
  }, function (locale) {
    return /*#__PURE__*/React.createElement(NoFormStyle, {
      override: true,
      status: true
    }, /*#__PURE__*/React.createElement(Input.Search, {
      ref: inputRef,
      onFocus: function onFocus() {
        return setFocused(true);
      },
      onBlur: function onBlur() {
        return setFocused(false);
      },
      value: query,
      allowClear: true,
      concise: true,
      suffix: searchSuffix && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, {
        className: "".concat(prefixCls, "-search-divider"),
        type: "vertical"
      }), searchSuffix),
      onChange: handleSearch,
      className: "".concat(prefixCls, "-search-input"),
      placeholder: placeholder || locale.placeholder
    }));
  })), renderStatistics(), /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefixCls, "-content"),
    style: contentStyle
  }, children, noResult), renderFooter());
};

export default SelectPanel;