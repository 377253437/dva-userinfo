import * as React from 'react';
import CheckableTag from './CheckableTag';
import { LiteralUnion, ElementOf } from '../_util/type';
import StatusTag from './StatusTag';
import TagGroup from './Group';
export declare const PresetTagColorTypes: ["dawnRed", "steppeYellow", "auroraGreen", "lakeBlue", "icyBlue", "orchidPurple"];
export declare type PresetTagColorType = ElementOf<typeof PresetTagColorTypes>;
export { CheckableTagProps } from './CheckableTag';
export interface TagProps extends React.HTMLAttributes<HTMLSpanElement> {
    prefixCls?: string;
    className?: string;
    color?: LiteralUnion<PresetTagColorType, string>;
    disabled?: boolean;
    closable?: boolean;
    closeIcon?: React.ReactNode;
    visible?: boolean;
    onClose?: (e: React.MouseEvent<HTMLElement>) => void;
    style?: React.CSSProperties;
    icon?: React.ReactNode;
    size?: 'small';
    textColor?: string;
    maxWidth?: number;
}
export interface TagType extends React.ForwardRefExoticComponent<TagProps & React.RefAttributes<HTMLElement>> {
    CheckableTag: typeof CheckableTag;
    StatusTag: typeof StatusTag;
    TagGroup: typeof TagGroup;
}
declare const Tag: TagType;
export default Tag;
