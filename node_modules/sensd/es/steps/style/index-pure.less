@import '../../style/themes/index';
@import '../../style/mixins/index';

@steps-prefix-cls: ~'@{sens-prefix}-steps';
@process-icon-color: @component-primary;
@process-title-color: @text-color-transparent;
@process-description-color: @text-sub-color-transparent;
@process-icon-text-color: @text-color-inverse;
@wait-icon-color: @disabled-color;
@wait-title-color: @text-sub-color-transparent;
@wait-description-color: @text-sub-color-transparent;
@wait-tail-color: @divideline-color-transparent-light;
@finish-icon-color: @process-icon-color;
@finish-title-color: @text-color-transparent;
@finish-description-color: @text-sub-color-transparent;
@finish-tail-color: @component-primary;
@error-icon-color: @error-color;
@error-title-color: @text-sub-color-transparent;
@error-description-color: @text-sub-color-transparent;
@error-tail-color: @wait-tail-color;
@steps-nav-active-color: @component-primary;
@loading-icon-color: @disabled-color;
@loading-title-color: @text-color-transparent-disable;
@loading-description-color: @text-color-transparent-disable;
@loading-tail-color: @divideline-color-transparent-light;

.@{steps-prefix-cls} {
  .reset-component();

  display: flex;
  width: 100%;
  font-size: 0;
  text-align: initial;
}

.@{steps-prefix-cls}-navigation {
  .@{steps-prefix-cls}-item {
    flex: 1;
  }
}

.@{steps-prefix-cls}-item {
  position: relative;
  display: inline-block;
  overflow: hidden;
  vertical-align: top;

  &-container {
    outline: none;
  }

  &:last-child {
    flex: none;
  }

  &:last-child > &-container > &-tail,
  &:last-child > &-container > &-content > &-title::after {
    display: none;
  }

  &-icon,
  &-content {
    display: inline-block;
    vertical-align: top;
  }

  &-icon {
    width: @steps-icon-size;
    height: @steps-icon-size;
    margin: @steps-icon-margin;
    font-size: @steps-icon-font-size;
    font-family: @font-family;
    line-height: @steps-icon-size;
    text-align: center;
    border: @border-width-base @border-style-base @wait-icon-color;
    border-radius: @steps-icon-size;
    transition: background-color 0.3s, border-color 0.3s;

    .@{steps-prefix-cls}-icon {
      position: relative;
      top: @steps-icon-top;
      color: @component-primary;
      line-height: 1;
    }

    .@{steps-prefix-cls}-loading-icon {
      color: @icon-color-transparent;
    }
  }

  &-tail {
    position: absolute;
    top: 12px;
    left: 0;
    width: 100%;
    padding: 0 10px;

    &::after {
      display: inline-block;
      width: 100%;
      height: 1px;
      background: @border-color-split;
      border-radius: 1px;
      transition: background 0.3s;
      content: '';
    }
  }

  &-title {
    position: relative;
    display: inline-block;
    margin-right: 100px;
    padding-right: 16px;
    color: @text-color;
    font-size: @font-size + 2px;
    line-height: @steps-title-line-height;

    &::after {
      position: absolute;
      top: (@steps-title-line-height / 2);
      left: 100%;
      display: block;
      min-width: 100px;
      height: 1px;
      background: @wait-tail-color;
      content: '';
    }
  }

  &-subtitle {
    display: inline;
    margin-left: 8px;
    color: @text-color-secondary;
    font-weight: normal;
    font-size: @font-size;
  }

  &-description {
    color: @text-color-secondary;
    font-size: @font-size;
  }
  .step-item-status(process);
  .step-item-status(wait);
  .step-item-status(loading);

  &-process > &-container > &-icon {
    background: @process-icon-color;
    .@{steps-prefix-cls}-icon {
      color: @process-icon-text-color;
    }
  }

  &-active {
    &.@{steps-prefix-cls}-item-error {
      > .@{steps-prefix-cls}-item-container {
        > .@{steps-prefix-cls}-item-icon {
          background: @warning-color;
          .@{steps-prefix-cls}-icon {
            color: @process-icon-text-color;
          }
        }
        > .@{steps-prefix-cls}-item-content {
          .@{steps-prefix-cls}-item-title,
          .@{steps-prefix-cls}-item-subtitle {
            color: @text-color-transparent;
            font-weight: 600;
          }
        }
      }
    }
  }

  &-process > &-container > &-content > &-title {
    font-weight: 600;
  }

  &-process > &-container > &-title {
    font-weight: 500;
  }
  .step-item-status(finish);
  .step-item-status(error);

  &.@{steps-prefix-cls}-next-error .@{steps-prefix-cls}-item-title::after {
    background: @error-icon-color;
  }

  &-disabled {
    cursor: not-allowed;
  }
}

// ===================== Clickable =====================
.@{steps-prefix-cls} .@{steps-prefix-cls}-item {
  .updateColor(@border, @bg, @font-color, @title) {
    &-icon {
      background-color: @bg;
      border-color: @border;
      .@{steps-prefix-cls}-icon {
        color: @font-color;
      }
    }

    &-title,
    &-subtitle {
      color: @title;

      > span {
        color: @title;
      }
    }
  }
  &:not(.@{steps-prefix-cls}-item-active) {
    & > .@{steps-prefix-cls}-item-container[role='button'] {
      cursor: pointer;
    }
  }
  & > .@{steps-prefix-cls}-item-container {
    .@{steps-prefix-cls}-item {
      &-title,
      &-subtitle,
      &-description,
      &-icon .@{steps-prefix-cls}-icon {
        transition: color 0.3s;
      }
    }

    &:hover {
      .@{steps-prefix-cls}-item {
        &-title,
        &-subtitle {
          color: @component-primary;

          > span {
            color: @component-primary;
          }
        }
      }
    }

    &:active {
      .@{steps-prefix-cls}-item {
        &-title,
        &-subtitle {
          color: @component-active;

          > span {
            color: @component-active;
          }
        }
      }
    }
  }
  &:not(.@{steps-prefix-cls}-item-process) {
    & > .@{steps-prefix-cls}-item-container:hover {
      .@{steps-prefix-cls}-item {
        &-icon {
          background-color: @component-active-background;
          border-color: @component-primary;
          .@{steps-prefix-cls}-icon {
            color: @component-primary;
          }
        }
      }
    }
    & > .@{steps-prefix-cls}-item-container:active {
      .@{steps-prefix-cls}-item {
        &-icon {
          background-color: @component-active-background;
          border-color: @component-active;
          .@{steps-prefix-cls}-icon {
            color: @component-active;
          }
        }
      }
    }
  }
  &.@{steps-prefix-cls}-item-error {
    &:not(.@{steps-prefix-cls}-item-active) {
      & > .@{steps-prefix-cls}-item-container {
        &:hover {
          .@{steps-prefix-cls}-item {
            .updateColor(
              @warning-color,
              @warning-light-background,
              @warning-color,
              @warning-color-active
            );
          }
        }

        &:active {
          .@{steps-prefix-cls}-item {
            .updateColor(
              @warning-color-active,
              @warning-light-background,
              @warning-color-active,
              @warning-color-active
            );
          }
        }
      }
    }
    &.@{steps-prefix-cls}-item-active {
      & > .@{steps-prefix-cls}-item-container {
        &:hover,
        &:active {
          .@{steps-prefix-cls}-item {
            .updateColor(@warning-color, @warning-color, @warning-color, @warning-color-active);

            &-icon {
              .@{steps-prefix-cls}-icon {
                color: @process-icon-text-color;
              }
            }
          }
        }
      }
    }
  }
  &.@{steps-prefix-cls}-item-loading {
    & > .@{steps-prefix-cls}-item-container {
      &:hover {
        .@{steps-prefix-cls}-item {
          .updateColor(
            @background-01-transparent,
            @background-transparent-grey,
            @background-01-transparent,
            @text-color-transparent-disable-hover
          );
        }
      }
    }
  }
  &.@{steps-prefix-cls}-item-disabled {
    & > .@{steps-prefix-cls}-item-container {
      .@{steps-prefix-cls}-item {
        &-icon {
          background-color: @background-transparent-grey;
          border-color: @background-01-transparent;
          .@{steps-prefix-cls}-icon {
            color: @text-color-transparent-disable;
          }
        }
      }

      &:hover {
        .@{steps-prefix-cls}-item {
          .updateColor(
            @background-01-transparent,
            @background-transparent-grey,
            @text-color-transparent-disable-hover,
            @text-color-transparent-disable-hover
          );
        }
      }
    }
  }
}

.@{steps-prefix-cls}-horizontal:not(.@{steps-prefix-cls}-label-vertical) {
  .@{steps-prefix-cls}-item {
    padding-left: 16px;
    white-space: nowrap;

    &:first-child {
      padding-left: 0;
    }
    &:last-child .@{steps-prefix-cls}-item-title {
      padding-right: 0;
    }

    &-tail {
      display: none;
    }

    &-title {
      max-width: 96px;
    }

    &-description {
      max-width: @steps-description-max-width;
      white-space: normal;
    }
  }
}

.step-item-status(@status) {
  @icon-color: '@{status}-icon-color';
  @title-color: '@{status}-title-color';
  @description-color: '@{status}-description-color';
  @tail-color: '@{status}-tail-color';
  &-@{status} &-icon {
    background-color: @steps-background;
    border-color: @@icon-color;
    > .@{steps-prefix-cls}-icon {
      color: @@icon-color;
      .@{steps-prefix-cls}-icon-dot {
        background: @@icon-color;
      }
    }
  }

  &-error &-icon {
    background-color: @warning-light-background;
  }

  &-finish &-icon {
    font-size: @font-size + 2px;
    background-color: @component-active-background;
  }

  &-wait &-icon {
    color: @text-sub-color-transparent;
    background-color: @background-transparent-grey;
    border-color: @outline-color-transparent;
  }

  &-loading &-icon {
    color: @text-color-transparent-disable;
    background-color: @background-transparent-grey;
    border-color: @background-01-transparent;
  }
  &-@{status} > &-container > &-content > &-title {
    color: @@title-color;

    > span {
      color: @@title-color;
    }

    &::after {
      background-color: @@tail-color;
    }
  }
  &-@{status} > &-container > &-content > &-description {
    color: @@description-color;

    > span {
      color: @@description-color;
    }
  }
  &-@{status} > &-container > &-tail::after {
    background-color: @@tail-color;
  }
}

@import './custom-icon';
@import './small';
@import './vertical';
@import './label-placement';
@import './progress-dot';
@import './nav';
@import './rtl';
@import './progress.less';
