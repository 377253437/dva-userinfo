"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _treeUtil = require("@sensd/rc-tree/lib/utils/treeUtil");

var _configProvider = require("../config-provider");

var _grid = require("../grid");

var _selectPanel = _interopRequireDefault(require("../select-panel"));

var _selectedPanel = _interopRequireDefault(require("./selectedPanel"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var Tree = function Tree(props) {
  var customizePrefixCls = props.prefixCls,
      maxCount = props.maxCount,
      treeData = props.treeData,
      value = props.value,
      _props$contentHeight = props.contentHeight,
      contentHeight = _props$contentHeight === void 0 ? 440 : _props$contentHeight,
      _props$grid = props.grid,
      grid = _props$grid === void 0 ? [10, 10] : _props$grid,
      clearConfirm = props.clearConfirm,
      onChange = props.onChange,
      restProps = __rest(props, ["prefixCls", "maxCount", "treeData", "value", "contentHeight", "grid", "clearConfirm", "onChange"]);

  var _useState = (0, _react.useState)([]),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      selectOptions = _useState2[0],
      setSelectOptions = _useState2[1];

  var _useState3 = (0, _react.useState)([]),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      newTreeData = _useState4[0],
      setNewTreeData = _useState4[1];

  var _useContext = (0, _react.useContext)(_configProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = getPrefixCls('select-transfer', customizePrefixCls);
  var fieldNames = restProps.fieldNames;
  var mergedFiledNames = (0, _treeUtil.fillFieldNames)(fieldNames); // 获取 treeSelect 列表内容高度

  var getInitListheight = function getInitListheight() {
    var _convertDataToEntitie = (0, _treeUtil.convertDataToEntities)(treeData, {
      fieldNames: fieldNames
    }),
        keyEntities = _convertDataToEntitie.keyEntities;

    var listHeight = Object.keys(keyEntities).length < 9 ? contentHeight - 80 : contentHeight - 110;
    listHeight = maxCount !== undefined ? listHeight + 46 : listHeight;
    return listHeight;
  };

  var fillLegacyProps = function fillLegacyProps(dataNode) {
    if (!dataNode) {
      return dataNode;
    }

    var cloneNode = (0, _extends2["default"])({}, dataNode);

    if (!('props' in cloneNode)) {
      Object.defineProperty(cloneNode, 'props', {
        get: function get() {
          return cloneNode;
        }
      });
    }

    return cloneNode;
  };

  var getResultOption = function getResultOption(key, path, rest) {
    var resultString = '';
    path.forEach(function (arr) {
      resultString += "".concat(arr, "/");
    });
    return (0, _extends2["default"])({
      label: key,
      detail: resultString.slice(0, -1)
    }, rest);
  };

  var treeDataFactory = function treeDataFactory(initTreeData) {
    var searchResult = [];

    var InitOptions = function InitOptions(data, parent) {
      data === null || data === void 0 ? void 0 : data.forEach(function (item) {
        var result = fillLegacyProps(item);
        var tmp = [].concat((0, _toConsumableArray2["default"])(parent), [result[mergedFiledNames.title]]);

        if (result[mergedFiledNames.children]) {
          InitOptions(result[mergedFiledNames.children], tmp);
        }

        var obj = getResultOption(result[mergedFiledNames.title], parent, result);
        searchResult.push((0, _extends2["default"])((0, _extends2["default"])({}, obj), {
          key: result[mergedFiledNames.key],
          value: result[mergedFiledNames.key]
        }));
      });
    };

    InitOptions(initTreeData, []);
    return searchResult;
  };

  (0, _react.useEffect)(function () {
    var newData = treeDataFactory(treeData);
    setNewTreeData(newData);
  }, [treeData]);
  (0, _react.useEffect)(function () {
    var newOptions = [];
    value === null || value === void 0 ? void 0 : value.forEach(function (data) {
      return newTreeData.forEach(function (item) {
        if (item.key === data) {
          newOptions.push(item);
        }
      });
    });
    setSelectOptions(newOptions);
  }, [value, newTreeData]);

  var handleChange = function handleChange(val, option) {
    onChange === null || onChange === void 0 ? void 0 : onChange(val, option);
  };

  return /*#__PURE__*/_react["default"].createElement("div", {
    style: {
      height: contentHeight
    },
    className: prefixCls
  }, /*#__PURE__*/_react["default"].createElement(_grid.Row, {
    gutter: 8,
    style: {
      height: '100%'
    }
  }, /*#__PURE__*/_react["default"].createElement(_grid.Col, {
    span: grid[0],
    style: {
      height: '100%'
    }
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "".concat(prefixCls, "-left")
  }, /*#__PURE__*/_react["default"].createElement(_selectPanel["default"].Tree, (0, _extends2["default"])({
    treeData: treeData,
    listHeight: getInitListheight(),
    footer: maxCount === undefined,
    multiple: true,
    value: value,
    maxCount: maxCount,
    onChange: handleChange,
    showSearch: true,
    statistics: true
  }, restProps)))), /*#__PURE__*/_react["default"].createElement(_grid.Col, {
    span: grid[1],
    style: {
      height: '100%'
    }
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "".concat(prefixCls, "-right")
  }, /*#__PURE__*/_react["default"].createElement(_selectedPanel["default"], {
    clearConfirm: clearConfirm,
    maxCount: maxCount,
    contentHeight: contentHeight,
    options: selectOptions,
    onChange: handleChange
  })))));
};

var _default = Tree;
exports["default"] = _default;