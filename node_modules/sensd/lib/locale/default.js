"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _en_US = _interopRequireDefault(require("rc-pagination/lib/locale/en_US"));

var _en_US2 = _interopRequireDefault(require("../date-picker/locale/en_US"));

var _en_US3 = _interopRequireDefault(require("../time-picker/locale/en_US"));

var _en_US4 = _interopRequireDefault(require("../calendar/locale/en_US"));

/* eslint-disable no-template-curly-in-string */
var typeTemplate = '${label} is not a valid ${type}';
var localeValues = {
  locale: 'en',
  Pagination: (0, _extends2["default"])((0, _extends2["default"])({}, _en_US["default"]), {
    prev_disable: 'Currently on first page',
    next_disable: 'Currently on last page',
    page_show: 'Currently displaying No. ${num} of records',
    page_select: 'Items displayed on this page'
  }),
  DatePicker: _en_US2["default"],
  TimePicker: _en_US3["default"],
  Calendar: _en_US4["default"],
  global: {
    placeholder: 'Please select'
  },
  Select: {
    cancelText: 'Cancel',
    okText: 'Ok',
    selectedCount: '${count} records selected'
  },
  SelectPanel: {
    okText: 'Ok',
    cancelText: 'Cancel',
    selectAll: 'All',
    placeholder: 'Please select',
    searchCount: '${count} results found',
    totalCount: '${count} of records',
    back: 'Back',
    noData: 'No data yet',
    noResult: 'No result',
    noResultDesc: 'No result found, please enter again'
  },
  SelectTransfer: {
    noData: 'No data',
    emptyText: 'Please select from the left survey list',
    clearAll: 'Clear all',
    selectedCount: '${count} selected',
    maxCount: ', Up to ${max} items can be selected'
  },
  Table: {
    filterTitle: 'Filter menu',
    filterConfirm: 'OK',
    filterReset: 'Reset',
    filterEmptyText: 'No filters',
    filterCheckall: 'Select all items',
    filterSearchPlaceholder: 'Search in filters',
    emptyText: 'No data',
    selectAll: 'Select current page',
    selectInvert: 'Invert current page',
    selectNone: 'Clear all data',
    selectionAll: 'Select all data',
    sortTitle: 'Sort',
    expand: 'Expand row',
    collapse: 'Collapse row',
    triggerDesc: 'Click to sort descending',
    triggerAsc: 'Click to sort ascending',
    cancelSort: 'Click to cancel sorting'
  },
  Modal: {
    okText: 'OK',
    cancelText: 'Cancel',
    justOkText: 'OK'
  },
  Popconfirm: {
    okText: 'OK',
    cancelText: 'Cancel'
  },
  Transfer: {
    titles: ['', ''],
    searchPlaceholder: 'Search here',
    itemUnit: 'item',
    itemsUnit: 'items',
    remove: 'Remove',
    selectCurrent: 'Select current page',
    removeCurrent: 'Remove current page',
    selectAll: 'Select all data',
    removeAll: 'Remove all data',
    selectInvert: 'Invert current page'
  },
  Upload: {
    uploading: 'Uploading...',
    removeFile: 'Remove file',
    uploadError: 'Upload error',
    previewFile: 'Preview file',
    downloadFile: 'Download file',
    triggerBtnTitle: 'Upload File',
    triggerPictureTitle: 'Upload Image',
    triggerDragTitle: 'Click or drag files here to upload',
    remove: 'Remove',
    cancel: 'Cancel',
    cancelUpload: 'Cancel upload',
    download: 'Download',
    maxCountTip: 'Maximum of ${num} files can be uploaded',
    fileOverSize: 'The file size exceeds limit',
    pictureOverSize: 'The image is too large',
    preview: 'Preview'
  },
  Empty: {
    description: 'No Data'
  },
  Icon: {
    icon: 'icon'
  },
  Text: {
    edit: 'Edit',
    copy: 'Copy',
    copied: 'Copied',
    expand: 'Expand'
  },
  PageHeader: {
    back: 'Back'
  },
  Form: {
    optional: '(Optional)',
    defaultValidateMessages: {
      "default": 'Field validation error for ${label}',
      required: 'Please enter ${label}',
      "enum": '${label} must be one of [${enum}]',
      whitespace: '${label} cannot be a blank character',
      date: {
        format: '${label} date format is invalid',
        parse: '${label} cannot be converted to a date',
        invalid: '${label} is an invalid date'
      },
      types: {
        string: typeTemplate,
        method: typeTemplate,
        array: typeTemplate,
        object: typeTemplate,
        number: typeTemplate,
        date: typeTemplate,
        "boolean": typeTemplate,
        integer: typeTemplate,
        "float": typeTemplate,
        regexp: typeTemplate,
        email: typeTemplate,
        url: typeTemplate,
        hex: typeTemplate
      },
      string: {
        len: '${label} must be ${len} characters',
        min: '${label} must be at least ${min} characters',
        max: '${label} must be up to ${max} characters',
        range: '${label} must be between ${min}-${max} characters'
      },
      number: {
        len: '${label} must be equal to ${len}',
        min: '${label} must be minimum ${min}',
        max: '${label} must be maximum ${max}',
        range: '${label} must be between ${min}-${max}'
      },
      array: {
        len: 'Must be ${len} ${label}',
        min: 'At least ${min} ${label}',
        max: 'At most ${max} ${label}',
        range: 'The amount of ${label} must be between ${min}-${max}'
      },
      pattern: {
        mismatch: '${label} does not match the pattern ${pattern}'
      }
    }
  },
  Image: {
    preview: 'Preview'
  },
  Tag: {
    successText: 'Succeeded',
    processingText: 'Ongoing',
    failedText: 'Failed',
    abnormalText: 'Error',
    invalidText: 'Invalid'
  },
  Tree: {
    expandText: 'Expand',
    foldText: 'Collapse'
  },
  Anchor: {
    collapse: 'Collapse',
    expand: 'Expand',
    all: 'All'
  },
  Card: {
    more: 'more'
  },
  BackTop: {
    backtop: 'BackTop'
  },
  Tabs: {
    all: 'All',
    addTab: 'Add Tab',
    deleteTab: 'Remove Tab',
    expandAll: 'Expand all tabs',
    collapseAll: 'Collapse all tabs'
  },
  Cascader: {
    selectedCount: '...Total of ${count} items'
  }
};
var _default = localeValues;
exports["default"] = _default;