"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _omit = _interopRequireDefault(require("rc-util/lib/omit"));

var _rcSteps = _interopRequireDefault(require("rc-steps"));

var _CheckOutlined = _interopRequireDefault(require("@sensd/icons/CheckOutlined"));

var _CloseOutlined = _interopRequireDefault(require("@sensd/icons/CloseOutlined"));

var _LoadingOutlined = _interopRequireDefault(require("@sensd/icons/LoadingOutlined"));

var _classnames = _interopRequireDefault(require("classnames"));

var _configProvider = require("../config-provider");

var _progress = _interopRequireDefault(require("../progress"));

var _useBreakpoint2 = _interopRequireDefault(require("../grid/hooks/useBreakpoint"));

var _typography = _interopRequireDefault(require("../typography"));

var _tooltip = _interopRequireDefault(require("../tooltip"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var Text = _typography["default"].Text;
var RcStep = _rcSteps["default"].Step;
var progressDefaultWidth = 40;
var progressSmallWidth = 32;

var Steps = function Steps(props) {
  var _classNames;

  var percent = props.percent,
      size = props.size,
      className = props.className,
      direction = props.direction,
      responsive = props.responsive,
      children = props.children,
      status = props.status;

  var _useBreakpoint = (0, _useBreakpoint2["default"])(),
      xs = _useBreakpoint.xs;

  var _React$useContext = React.useContext(_configProvider.ConfigContext),
      getPrefixCls = _React$useContext.getPrefixCls,
      rtlDirection = _React$useContext.direction;

  var getDirection = React.useCallback(function () {
    return responsive && xs ? 'vertical' : direction;
  }, [xs, direction]);
  var prefixCls = getPrefixCls('steps', props.prefixCls);
  var iconPrefix = getPrefixCls('', props.iconPrefix);
  var stepsClassName = (0, _classnames["default"])((_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-rtl"), rtlDirection === 'rtl'), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-with-progress"), percent !== undefined), _classNames), className);
  var icons = {
    finish: /*#__PURE__*/React.createElement(_CheckOutlined["default"], {
      className: "".concat(prefixCls, "-finish-icon")
    }),
    error: /*#__PURE__*/React.createElement(_CloseOutlined["default"], {
      className: "".concat(prefixCls, "-error-icon")
    })
  };

  var stepIconRender = function stepIconRender(_ref) {
    var node = _ref.node,
        StepStatus = _ref.status,
        index = _ref.index;

    var _a, _b;

    if (StepStatus === 'process' && percent !== undefined) {
      // currently it's hard-coded, since we can't easily read the actually width of icon
      var progressWidth = size === 'small' ? progressSmallWidth : progressDefaultWidth;
      var iconWithProgress = /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "-progress-icon")
      }, /*#__PURE__*/React.createElement(_progress["default"], {
        type: "circle",
        percent: percent,
        width: progressWidth,
        strokeWidth: 4,
        format: function format() {
          return null;
        }
      }), node);
      return iconWithProgress;
    }

    if (StepStatus === 'error') {
      // status为error则不走原本的icon显示，直接显步骤数
      var stepList = React.Children.toArray(children); // 若是传入icon则不显示步骤数，直接显示 icon

      if (!((_b = (_a = stepList[index]) === null || _a === void 0 ? void 0 : _a.props) === null || _b === void 0 ? void 0 : _b.icon)) {
        return /*#__PURE__*/React.createElement("span", {
          className: "".concat(prefixCls, "-icon")
        }, index + 1);
      }
    }

    if (StepStatus === 'loading') {
      return /*#__PURE__*/React.createElement(_LoadingOutlined["default"], {
        className: "".concat(prefixCls, "-loading-icon")
      });
    }

    return node;
  };

  return /*#__PURE__*/React.createElement(_rcSteps["default"], (0, _extends2["default"])({
    icons: icons
  }, (0, _omit["default"])(props, ['percent', 'responsive']), {
    status: status // 避免ts检查报错
    ,
    direction: getDirection(),
    stepIcon: stepIconRender,
    prefixCls: prefixCls,
    iconPrefix: iconPrefix,
    className: stepsClassName
  }));
};

var Step = function Step(props) {
  var title = props.title,
      description = props.description,
      status = props.status,
      tip = props.tip,
      restProps = __rest(props, ["title", "description", "status", "tip"]); // 创建ellipsis组件


  var createEllipsisText = function createEllipsisText(text, showTip) {
    var shouldShowTip = showTip && tip;

    if (typeof text !== 'string') {
      return shouldShowTip ? /*#__PURE__*/React.createElement(_tooltip["default"], {
        title: tip
      }, text) : text;
    }

    var ellipsisText = /*#__PURE__*/React.createElement(Text, {
      ellipsis: {
        tooltip: !shouldShowTip && text
      }
    }, text);
    return shouldShowTip ? /*#__PURE__*/React.createElement(_tooltip["default"], {
      title: shouldShowTip
    }, ellipsisText) : ellipsisText;
  };

  var titleEllipsis = createEllipsisText(title, true);
  var descriptionEllipsis = createEllipsisText(description);
  return /*#__PURE__*/React.createElement(RcStep, (0, _extends2["default"])({}, restProps, {
    status: status // 避免ts检查报错
    ,
    title: titleEllipsis,
    description: descriptionEllipsis
  }));
};

Steps.Step = Step;
Steps.defaultProps = {
  current: 0,
  responsive: true
};
var _default = Steps;
exports["default"] = _default;