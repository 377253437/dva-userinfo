"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _UploadOutlined = _interopRequireDefault(require("@sensd/icons/UploadOutlined"));

var _button = _interopRequireDefault(require("../button"));

var _tooltip = _interopRequireDefault(require("../tooltip"));

var _LocaleReceiver = _interopRequireDefault(require("../locale-provider/LocaleReceiver"));

var _default2 = _interopRequireDefault(require("../locale/default"));

var _utils = _interopRequireDefault(require("../locale/utils"));

var _context = _interopRequireDefault(require("./context"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Trigger = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _classNames;

  var title = _ref.title,
      children = _ref.children;

  var _React$useContext = React.useContext(_context["default"]),
      type = _React$useContext.type,
      prefixCls = _React$useContext.prefixCls,
      direction = _React$useContext.direction,
      disabled = _React$useContext.disabled,
      _React$useContext$max = _React$useContext.maxCount,
      maxCount = _React$useContext$max === void 0 ? Number.MAX_SAFE_INTEGER : _React$useContext$max,
      _React$useContext$fil = _React$useContext.fileCount,
      fileCount = _React$useContext$fil === void 0 ? 0 : _React$useContext$fil,
      propLocale = _React$useContext.propLocale,
      setDefaultTrigger = _React$useContext.setDefaultTrigger;

  React.useEffect(function () {
    setDefaultTrigger(true);
  }, []);
  var btnClass = (0, _classnames["default"])((_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-trigger"), true), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-trigger-type-").concat(type), true), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-trigger-disabled"), disabled || maxCount <= fileCount), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-trigger-rtl"), direction === 'rtl'), _classNames)); // when is single picture and has uploaded, hide button if type is picture.

  var isSinglePictureUploaded = fileCount === 1 && maxCount === 1 && (type === 'picture' || type === 'drag');

  if (type === 'picture' && isSinglePictureUploaded) {
    return null;
  }

  return /*#__PURE__*/React.createElement(_LocaleReceiver["default"], {
    componentName: "Upload",
    defaultLocale: _default2["default"].Upload
  }, function (locale) {
    var _Object$assign = (0, _extends2["default"])((0, _extends2["default"])({}, locale), propLocale),
        triggerBtnTitle = _Object$assign.triggerBtnTitle,
        triggerDragTitle = _Object$assign.triggerDragTitle,
        triggerPictureTitle = _Object$assign.triggerPictureTitle,
        maxCountTip = _Object$assign.maxCountTip; // Tooltip won't hide at disabled button, so
    // Tooltip fix this bug by judging whether it's children is disabled button and do something to fix it.


    var dom = type === 'button' ? /*#__PURE__*/React.createElement(_button["default"], {
      className: btnClass,
      ref: ref,
      disabled: disabled || maxCount <= fileCount
    }, title || triggerBtnTitle) : /*#__PURE__*/React.createElement("div", {
      className: btnClass,
      ref: ref
    }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(_UploadOutlined["default"], null), /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-trigger-title")
    }, title || (type === 'picture' ? triggerPictureTitle : triggerDragTitle)), type === 'drag' && children ? /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-trigger-tip")
    }, children) : null));

    if (!isSinglePictureUploaded && maxCount <= fileCount) {
      return /*#__PURE__*/React.createElement(_tooltip["default"], {
        title: (0, _utils["default"])(maxCountTip, {
          num: "".concat(maxCount)
        })
      }, dom);
    }

    return dom;
  });
});
var _default = Trigger;
exports["default"] = _default;