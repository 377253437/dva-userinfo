"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof3 = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var React = _interopRequireWildcard(require("react"));

var _selector = _interopRequireDefault(require("../select/selector"));

var _utils = require("./utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var InternalSelector = function InternalSelector(props) {
  var internalValue = props.internalValue,
      getDisplayValues = props.getDisplayValues,
      multiple = props.multiple,
      selectorSimpleMode = props.selectorSimpleMode,
      maxTagCount = props.maxTagCount,
      maxTagPlaceholder = props.maxTagPlaceholder,
      placeholder = props.placeholder,
      labelInValue = props.labelInValue,
      prefixIcon = props.prefixIcon,
      toggleConfirm = props.toggleConfirm,
      onOptionSelect = props.onOptionSelect;

  var onRemoveSelectorTag = function onRemoveSelectorTag(value) {
    toggleConfirm(true);
    onOptionSelect(value, {
      selected: false,
      source: 'clear'
    });
  };

  var rawValue = (0, _utils.toArray)(internalValue);
  var keyValue = rawValue.map(function (val) {
    return (0, _typeof2["default"])(val) === 'object' ? val.value : val;
  });
  var rawLabel = (0, _utils.toLabeledValues)(keyValue);
  var displayValues = getDisplayValues(keyValue, rawLabel);

  if (labelInValue) {
    displayValues = displayValues.map(function (item) {
      return (0, _extends2["default"])((0, _extends2["default"])({}, item), {
        value: item.value,
        label: item.label
      });
    });
  }

  var value;

  if (multiple) {
    value = displayValues;

    if (maxTagCount && typeof maxTagCount === 'number') {
      var omittedValues = value.slice(maxTagCount);
      value = value.slice(0, maxTagCount);

      if (omittedValues.length) {
        var maxTagLabel = "+ ".concat(omittedValues.length, "...");

        if (maxTagPlaceholder) {
          maxTagLabel = typeof maxTagPlaceholder === 'function' ? maxTagPlaceholder(omittedValues) : maxTagPlaceholder;
        }

        value.push({
          label: maxTagLabel,
          value: 'max-tag',
          closable: false
        });
      }
    }
  } else {
    var _displayValues = displayValues;

    var _displayValues2 = (0, _slicedToArray2["default"])(_displayValues, 1);

    value = _displayValues2[0];
  }

  return /*#__PURE__*/React.createElement(_selector["default"], {
    displayValue: keyValue.length === 0 ? undefined : value,
    selectorSimpleMode: selectorSimpleMode,
    placeholder: placeholder,
    prefixIcon: prefixIcon,
    onClose: onRemoveSelectorTag
  });
};

var _default = InternalSelector;
exports["default"] = _default;