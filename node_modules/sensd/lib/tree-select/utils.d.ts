import type { DefaultOptionType, InternalFieldName, TreeSelectProps } from '@sensd/rc-tree-select/lib/TreeSelect';
import type { SelectOptionProps } from '../select-panel/SelectOption';
import type { RawValue } from './index';
declare type GetFuncType<T> = T extends boolean ? never : T;
declare type FilterFn = GetFuncType<TreeSelectProps['filterTreeNode']>;
export declare function toArray<T>(value: T | T[] | undefined): T[];
export declare function useFilterTree2List({ treeData, fieldNames, highlightCls, wrapperLabelCls, getLabel, multiple, treeCheckStrictly, treeNodeFilterProp, filterTreeNode, }: {
    treeData: DefaultOptionType[];
    fieldNames: InternalFieldName;
    highlightCls: string;
    wrapperLabelCls: string;
    getLabel: (item: DefaultOptionType) => string;
    multiple?: boolean;
    treeCheckStrictly?: boolean;
    treeNodeFilterProp: string;
    filterTreeNode?: FilterFn | boolean;
}): (internalValue?: any, searchValue?: string) => SelectOptionProps[];
export declare function toLabeledValues(value?: RawValue | RawValue[]): {
    value: string | number;
}[];
export {};
