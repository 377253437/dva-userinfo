import * as React from 'react';
import type { LabeledValueType, RawValueType, TreeSelectProps, OnInternalSelect } from '@sensd/rc-tree-select/lib/TreeSelect';
import type { LabelValueType } from '@sensd/rc-tree-select/lib/interface';
import type { RawValue } from './index';
declare type GetFuncType<T> = T extends boolean ? never : T;
interface SelectorProps {
    internalValue?: RawValue | RawValue[];
    getDisplayValues: (rawCheckedValues: RawValueType[], rawLabeledValues: LabeledValueType[]) => LabelValueType[];
    multiple?: boolean;
    selectorSimpleMode?: boolean;
    maxTagCount?: GetFuncType<TreeSelectProps['maxTagCount']>;
    maxTagPlaceholder?: TreeSelectProps['maxTagPlaceholder'];
    placeholder?: string;
    labelInValue?: boolean;
    prefixIcon?: React.ReactNode;
    toggleConfirm: (isConfirm: boolean) => void;
    onOptionSelect: OnInternalSelect;
}
declare const InternalSelector: (props: SelectorProps) => JSX.Element;
export default InternalSelector;
