"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _useMergedState3 = _interopRequireDefault(require("rc-util/lib/hooks/useMergedState"));

var _valueUtil = require("@sensd/rc-select/lib/utils/valueUtil");

var _useOptions2 = _interopRequireDefault(require("@sensd/rc-select/lib/hooks/useOptions"));

var _SelectPanel = _interopRequireDefault(require("./SelectPanel"));

var _Select = _interopRequireDefault(require("./Select"));

var _configProvider = require("../config-provider");

var _Empty = _interopRequireWildcard(require("./Empty"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var List = function List(props, ref) {
  var propsValue = props.value,
      customizePrefixCls = props.prefixCls,
      defaultValue = props.defaultValue,
      _props$searchValue = props.searchValue,
      searchValue = _props$searchValue === void 0 ? '' : _props$searchValue,
      _props$options = props.options,
      options = _props$options === void 0 ? [] : _props$options,
      _props$footer = props.footer,
      footer = _props$footer === void 0 ? true : _props$footer,
      statistics = props.statistics,
      multiple = props.multiple,
      fieldNames = props.fieldNames,
      onChange = props.onChange,
      noDataTitle = props.noDataTitle,
      noDataDesc = props.noDataDesc,
      noResultTitle = props.noResultTitle,
      noResultDesc = props.noResultDesc,
      maxCount = props.maxCount,
      listHeight = props.listHeight,
      showSearch = props.showSearch,
      selectAllText = props.selectAllText,
      others = __rest(props, ["value", "prefixCls", "defaultValue", "searchValue", "options", "footer", "statistics", "multiple", "fieldNames", "onChange", "noDataTitle", "noDataDesc", "noResultTitle", "noResultDesc", "maxCount", "listHeight", "showSearch", "selectAllText"]); // 搜索


  var _useState = (0, _react.useState)(searchValue),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      query = _useState2[0],
      setQuery = _useState2[1];

  (0, _react.useEffect)(function () {
    setQuery(searchValue);
  }, [searchValue]);

  var _useContext = (0, _react.useContext)(_configProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = getPrefixCls('select-panel', customizePrefixCls); // =========================== Values ===========================

  var _useMergedState = (0, _useMergedState3["default"])(defaultValue, {
    value: propsValue
  }),
      _useMergedState2 = (0, _slicedToArray2["default"])(_useMergedState, 2),
      internalValue = _useMergedState2[0],
      setInternalValue = _useMergedState2[1];

  (0, _react.useEffect)(function () {
    setInternalValue(propsValue);
  }, [propsValue]); // 半选

  var _useState3 = (0, _react.useState)(false),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      indeterminate = _useState4[0],
      setIndeterminate = _useState4[1]; // 全选


  var _useState5 = (0, _react.useState)(false),
      _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
      checkAll = _useState6[0],
      setCheckAll = _useState6[1];

  var _useState7 = (0, _react.useState)(false),
      _useState8 = (0, _slicedToArray2["default"])(_useState7, 2),
      hasSelectAllTip = _useState8[0],
      setSelectAllTip = _useState8[1];

  var mergedFieldNames = (0, _react.useMemo)(function () {
    return (0, _valueUtil.fillFieldNames)(fieldNames, false);
  }, [JSON.stringify(fieldNames)]);

  var _useState9 = (0, _react.useState)([]),
      _useState10 = (0, _slicedToArray2["default"])(_useState9, 2),
      flattenOptions = _useState10[0],
      setFlattenOptions = _useState10[1];

  var onListChange = function onListChange(opts) {
    setFlattenOptions(opts);
  };

  var _useOptions = (0, _useOptions2["default"])(options, null, mergedFieldNames),
      valueOptions = _useOptions.valueOptions,
      mergedOptions = _useOptions.options;

  var onCheckboxChange = function onCheckboxChange(value) {
    var disabledSelectedValues = (value || []).filter(function (val) {
      var opt = valueOptions.get(val);
      return opt === null || opt === void 0 ? void 0 : opt.disabled;
    });
    var opts = mergedOptions;
    var data = opts.filter(function (item) {
      return !item.disabled;
    }).map(function (item) {
      return item.value;
    });

    if (maxCount !== undefined) {
      if (maxCount > disabledSelectedValues.length) {
        var enableValue = value.filter(function (val) {
          return !disabledSelectedValues.includes(val);
        });
        var filterData = Array.from(new Set([].concat((0, _toConsumableArray2["default"])(data), (0, _toConsumableArray2["default"])(enableValue))));
        var dataLength = maxCount - disabledSelectedValues.length - enableValue.length;
        data = dataLength > 0 ? filterData.slice(0, dataLength).concat(enableValue) : [];
      } else {
        data = [];
      }
    }

    return {
      filteredValues: [].concat((0, _toConsumableArray2["default"])(disabledSelectedValues), (0, _toConsumableArray2["default"])(data)),
      disabledSelectedValues: disabledSelectedValues
    };
  };

  var handleCheckAll = function handleCheckAll(e) {
    var checked = e.target.checked;
    setCheckAll(checked);

    var _onCheckboxChange = onCheckboxChange(internalValue),
        filteredValues = _onCheckboxChange.filteredValues,
        disabledSelectedValues = _onCheckboxChange.disabledSelectedValues;

    var values = checked ? filteredValues : disabledSelectedValues;
    setInternalValue(values);
    var opts = values.map(function (val) {
      return valueOptions.get(val);
    });
    onChange === null || onChange === void 0 ? void 0 : onChange(values, opts);
  };

  var count = (0, _react.useMemo)(function () {
    return flattenOptions.filter(function (item) {
      return !item.group;
    }).length;
  }, [flattenOptions]);

  var handleChange = function handleChange(value, opts) {
    setInternalValue(value);
    onChange === null || onChange === void 0 ? void 0 : onChange(value, opts);
  };

  (0, _react.useEffect)(function () {
    if (multiple) {
      // 半选
      setIndeterminate(!!(internalValue === null || internalValue === void 0 ? void 0 : internalValue.length) && (internalValue === null || internalValue === void 0 ? void 0 : internalValue.length) < mergedOptions.length); // 全选

      var _onCheckboxChange2 = onCheckboxChange(internalValue),
          filteredValues = _onCheckboxChange2.filteredValues;

      setCheckAll((internalValue === null || internalValue === void 0 ? void 0 : internalValue.length) === filteredValues.length);
      setSelectAllTip(mergedOptions.some(function (item) {
        return item.disabled === true;
      }));
    }
  }, [internalValue, mergedOptions]);

  var _useMemo = (0, _react.useMemo)(function () {
    return [/*#__PURE__*/_react["default"].createElement("div", {
      key: _Empty.EmptyType.noData,
      className: "".concat(prefixCls, "-nodata")
    }, /*#__PURE__*/_react["default"].createElement(_Empty["default"], {
      type: _Empty.EmptyType.noData,
      noDataTitle: noDataTitle,
      noDataDesc: noDataDesc
    })), /*#__PURE__*/_react["default"].createElement("div", {
      key: _Empty.EmptyType.noResult,
      className: "".concat(prefixCls, "-no-result")
    }, /*#__PURE__*/_react["default"].createElement(_Empty["default"], {
      type: _Empty.EmptyType.noResult,
      noResultTitle: noResultTitle,
      noResultDesc: noResultDesc
    }))];
  }, [noDataDesc]),
      _useMemo2 = (0, _slicedToArray2["default"])(_useMemo, 2),
      noDataComp = _useMemo2[0],
      noResultComp = _useMemo2[1];

  var selectRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, function () {
    return selectRef.current;
  });
  return /*#__PURE__*/_react["default"].createElement(_SelectPanel["default"], {
    query: query,
    count: count,
    onSearch: setQuery,
    indeterminate: indeterminate,
    checkAll: checkAll,
    onCheckAll: handleCheckAll,
    footer: footer,
    statistics: statistics,
    multiple: multiple,
    customContent: options.length === 0 && noDataComp,
    noResult: query && count === 0 && noResultComp,
    contentStyle: {
      minHeight: listHeight
    },
    showSearch: showSearch,
    selectAllText: selectAllText,
    hasSelectAllTip: hasSelectAllTip
  }, /*#__PURE__*/_react["default"].createElement(_Select["default"], (0, _extends2["default"])({
    ref: selectRef,
    options: mergedOptions,
    query: query,
    queryString: query,
    onListChange: onListChange,
    multiple: multiple,
    fieldNames: fieldNames,
    valueOptions: valueOptions,
    value: internalValue,
    onChange: handleChange,
    maxCount: maxCount,
    listHeight: listHeight
  }, others)));
};

var _default = /*#__PURE__*/_react["default"].forwardRef(List);

exports["default"] = _default;