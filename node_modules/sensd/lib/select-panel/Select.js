"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _useOptions2 = _interopRequireDefault(require("@sensd/rc-select/lib/hooks/useOptions"));

var _classnames = _interopRequireDefault(require("classnames"));

var _valueUtil = require("@sensd/rc-select/lib/utils/valueUtil");

var _useMergedState3 = _interopRequireDefault(require("rc-util/lib/hooks/useMergedState"));

var _omit = _interopRequireDefault(require("rc-util/lib/omit"));

var _rcVirtualList = _interopRequireDefault(require("rc-virtual-list"));

var _configProvider = require("../config-provider");

var _SelectOption = _interopRequireDefault(require("./SelectOption"));

var _searchWords = _interopRequireDefault(require("./utils/searchWords"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var Select = function Select(props, ref) {
  var _props$listHeight = props.listHeight,
      listHeight = _props$listHeight === void 0 ? 358 : _props$listHeight,
      customizePrefixCls = props.prefixCls,
      _props$query = props.query,
      query = _props$query === void 0 ? '' : _props$query,
      _props$queryString = props.queryString,
      queryString = _props$queryString === void 0 ? '' : _props$queryString,
      multiple = props.multiple,
      disabled = props.disabled,
      onChange = props.onChange,
      _props$options = props.options,
      options = _props$options === void 0 ? [] : _props$options,
      _props$selectGroupTyp = props.selectGroupType,
      selectGroupType = _props$selectGroupTyp === void 0 ? 'box' : _props$selectGroupTyp,
      defaultValue = props.defaultValue,
      propsValue = props.value,
      onListChange = props.onListChange,
      valueOptions = props.valueOptions,
      fieldNames = props.fieldNames,
      onClick = props.onClick,
      maxCount = props.maxCount,
      _props$listItemHeight = props.listItemHeight,
      listItemHeight = _props$listItemHeight === void 0 ? 34 : _props$listItemHeight,
      _props$virtual = props.virtual,
      virtual = _props$virtual === void 0 ? true : _props$virtual; // =========================== Values ===========================

  var _useMergedState = (0, _useMergedState3["default"])(defaultValue, {
    value: propsValue
  }),
      _useMergedState2 = (0, _slicedToArray2["default"])(_useMergedState, 2),
      internalValue = _useMergedState2[0],
      setInternalValue = _useMergedState2[1];

  (0, _react.useEffect)(function () {
    setInternalValue(propsValue);
  }, [propsValue]);

  var _useContext = (0, _react.useContext)(_configProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = getPrefixCls('select-panel', customizePrefixCls);
  var listRef = (0, _react.useRef)(null);
  var mergedFieldNames = (0, _react.useMemo)(function () {
    return (0, _valueUtil.fillFieldNames)(fieldNames, false);
  }, [JSON.stringify(fieldNames)]);
  var filteredData = (0, _react.useMemo)(function () {
    var data = options;

    if (query) {
      data = options.map(function (item) {
        // 如果有分组，只需要搜索分组
        if (item[mergedFieldNames.options]) {
          var filteredChildren = item[mergedFieldNames.options].filter(function (opt) {
            return typeof opt[mergedFieldNames.label] === 'string' && opt[mergedFieldNames.label].toString().includes(query);
          });
          return (0, _extends2["default"])((0, _extends2["default"])({}, item), {
            options: filteredChildren
          });
        }

        return item;
      }).filter(function (item) {
        var childrenOpts = item[mergedFieldNames.options];
        var label = item[mergedFieldNames.label];

        if (!query) {
          return true;
        } // 如果有分组


        if (childrenOpts) {
          return childrenOpts.length > 0;
        } // 搜索label


        if (label && typeof label === 'string') {
          return label.includes(query);
        }

        return false;
      });
    }

    return data;
  }, [query, options]);
  var memoFlattenOptions = (0, _react.useMemo)(function () {
    var opts = (0, _valueUtil.flattenOptions)(filteredData, {
      fieldNames: fieldNames,
      childrenAsData: false
    });
    onListChange === null || onListChange === void 0 ? void 0 : onListChange(opts);
    return opts;
  }, [filteredData]);
  var itemPrefixCls = "".concat(prefixCls, "-option");

  var _useOptions = (0, _useOptions2["default"])(options, null, mergedFieldNames),
      innerValOptions = _useOptions.valueOptions;

  var handleClick = function handleClick(item) {
    if (multiple) {
      // 多选
      var originVal = internalValue || [];
      var newVal;

      if (originVal.includes(item[mergedFieldNames.value])) {
        newVal = originVal.filter(function (val) {
          return val !== item[mergedFieldNames.value];
        });
        setInternalValue(newVal);
        onClick === null || onClick === void 0 ? void 0 : onClick(item[mergedFieldNames.value], false);
      } else {
        newVal = [].concat((0, _toConsumableArray2["default"])(originVal), [item[mergedFieldNames.value]]);
        setInternalValue(newVal);
        onClick === null || onClick === void 0 ? void 0 : onClick(item[mergedFieldNames.value], true);
      }

      var opts = newVal.map(function (val) {
        return (valueOptions === null || valueOptions === void 0 ? void 0 : valueOptions.get(val)) || innerValOptions.get(val);
      });
      onChange === null || onChange === void 0 ? void 0 : onChange(newVal, opts);
    } else {
      // 单选
      setInternalValue(item[mergedFieldNames.value]);
      onChange === null || onChange === void 0 ? void 0 : onChange(item[mergedFieldNames.value], item);
      onClick === null || onClick === void 0 ? void 0 : onClick(item[mergedFieldNames.value], internalValue === item[mergedFieldNames.value]);
    }
  };

  (0, _react.useImperativeHandle)(ref, function () {
    var _a;

    return {
      scrollTo: (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.scrollTo
    };
  });
  return /*#__PURE__*/_react["default"].createElement(_rcVirtualList["default"], {
    ref: listRef,
    itemKey: "key",
    data: memoFlattenOptions,
    height: listHeight,
    itemHeight: listItemHeight,
    fullHeight: false,
    virtual: virtual
  }, function (item, itemIndex) {
    var group = item.group,
        data = item.data,
        label = item.label,
        value = item.value;

    var _a = (0, _omit["default"])(data, ['prefixCls', 'onClick', 'label']),
        key = _a.key,
        optDisabled = _a.disabled,
        others = __rest(_a, ["key", "disabled"]); // Group


    if (group) {
      return selectGroupType === 'line' ? /*#__PURE__*/_react["default"].createElement("div", {
        className: (0, _classnames["default"])((0, _defineProperty2["default"])({}, "".concat(itemPrefixCls, "-group-line"), itemIndex !== 0))
      }) : /*#__PURE__*/_react["default"].createElement("div", {
        className: (0, _classnames["default"])("".concat(itemPrefixCls, "-group"))
      }, label !== undefined ? label : key);
    }

    var mergedDisabled = disabled || optDisabled;

    if (maxCount !== undefined && multiple && Array.isArray(internalValue) && internalValue.length >= maxCount && !internalValue.includes(value)) {
      mergedDisabled = true;
    }

    var content = typeof label === 'string' ? (0, _searchWords["default"])(label, queryString, prefixCls) : label; // Option

    return /*#__PURE__*/_react["default"].createElement(_SelectOption["default"], (0, _extends2["default"])({
      multiple: multiple,
      onClick: function onClick() {
        return !mergedDisabled && handleClick(data);
      },
      key: itemIndex,
      prefixCls: itemPrefixCls,
      active: multiple ? internalValue === null || internalValue === void 0 ? void 0 : internalValue.includes(value) : internalValue === value,
      disabled: mergedDisabled,
      label: content
    }, others));
  });
};

var _default = /*#__PURE__*/_react["default"].forwardRef(Select);

exports["default"] = _default;