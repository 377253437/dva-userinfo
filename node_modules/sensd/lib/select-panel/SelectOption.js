"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _CheckOutlined = _interopRequireDefault(require("@sensd/icons/CheckOutlined"));

var _checkbox = _interopRequireDefault(require("../checkbox"));

var _typography = _interopRequireDefault(require("../typography"));

var _tooltip = _interopRequireDefault(require("../tooltip"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var SelectOption = function SelectOption(props) {
  var _classNames, _classNames2;

  var _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'sens-select-panel-option' : _props$prefixCls,
      disabled = props.disabled,
      multiple = props.multiple,
      label = props.label,
      prefixIcon = props.prefixIcon,
      suffixIcon = props.suffixIcon,
      detail = props.detail,
      active = props.active,
      disabledText = props.disabledText,
      onClick = props.onClick;
  var mergedCls = (0, _classnames["default"])((_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-disabled"), disabled), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-active"), active), _classNames), prefixCls);
  var renderOption = /*#__PURE__*/React.createElement("div", {
    className: mergedCls,
    onClick: onClick
  }, /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefixCls, "-content")
  }, (prefixIcon || multiple) && /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefixCls, "-left")
  }, multiple && /*#__PURE__*/React.createElement(_checkbox["default"], {
    disabled: disabled,
    checked: active
  }) || prefixIcon), /*#__PURE__*/React.createElement("div", {
    className: (0, _classnames["default"])((_classNames2 = {}, (0, _defineProperty2["default"])(_classNames2, "".concat(prefixCls, "-has-left"), prefixIcon), (0, _defineProperty2["default"])(_classNames2, "".concat(prefixCls, "-one-icon"), suffixIcon), (0, _defineProperty2["default"])(_classNames2, "".concat(prefixCls, "-two-icon"), suffixIcon && !multiple), _classNames2), "".concat(prefixCls, "-text"))
  }, /*#__PURE__*/React.createElement(_typography["default"].Text, {
    ellipsis: {
      tooltip: !(disabledText && disabled)
    },
    className: "".concat(prefixCls, "-ellipsis")
  }, label), detail && /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefixCls, "-detail")
  }, /*#__PURE__*/React.createElement(_typography["default"].Text, {
    ellipsis: {
      tooltip: !(disabledText && disabled)
    },
    className: "".concat(prefixCls, "-ellipsis")
  }, detail))), /*#__PURE__*/React.createElement("div", {
    className: (0, _classnames["default"])((0, _defineProperty2["default"])({}, "".concat(prefixCls, "-suffix"), suffixIcon && !multiple), "".concat(prefixCls, "-right"))
  }, suffixIcon && /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefixCls, "-suffix-icon")
  }, suffixIcon), active && !multiple && /*#__PURE__*/React.createElement(_CheckOutlined["default"], null))));

  if (disabledText && disabled) {
    return /*#__PURE__*/React.createElement(_tooltip["default"], {
      title: disabledText,
      placement: "top"
    }, renderOption);
  }

  return renderOption;
};

var _default = /*#__PURE__*/React.forwardRef(SelectOption);

exports["default"] = _default;