"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _MultipleSelector = _interopRequireDefault(require("./MultipleSelector"));

var _SingleSelector = _interopRequireDefault(require("./SingleSelector"));

var _configProvider = require("../../config-provider");

var _LocaleReceiver = _interopRequireDefault(require("../../locale-provider/LocaleReceiver"));

var _default2 = _interopRequireDefault(require("../../locale/default"));

var _typography = _interopRequireDefault(require("../../typography"));

var Selector = function Selector(props) {
  var displayValue = props.displayValue,
      placeholder = props.placeholder,
      selectorSimpleMode = props.selectorSimpleMode,
      prefixIcon = props.prefixIcon,
      suffixIcon = props.suffixIcon,
      onClose = props.onClose,
      disabled = props.disabled;

  var _React$useContext = _react["default"].useContext(_configProvider.ConfigContext),
      getPrefixCls = _React$useContext.getPrefixCls;

  var prefixCls = getPrefixCls('select');

  var placeholderNode = /*#__PURE__*/_react["default"].createElement(_LocaleReceiver["default"], {
    componentName: "global",
    defaultLocale: _default2["default"].global
  }, function (locale) {
    var tips = placeholder || locale.placeholder;
    return /*#__PURE__*/_react["default"].createElement("span", {
      className: "".concat(prefixCls, "-selection-placeholder")
    }, prefixIcon && /*#__PURE__*/_react["default"].createElement("div", {
      className: "".concat(prefixCls, "-selector-prefix-icon")
    }, prefixIcon), /*#__PURE__*/_react["default"].createElement(_typography["default"].Text, {
      ellipsis: {
        tooltip: tips
      },
      className: "".concat(prefixCls, "-ellipsis")
    }, tips));
  });

  if (!displayValue) {
    return placeholderNode;
  }

  if (Array.isArray(displayValue)) {
    if (displayValue.length === 0) return placeholderNode;
    return /*#__PURE__*/_react["default"].createElement(_MultipleSelector["default"], {
      selectorSimpleMode: selectorSimpleMode,
      displayValue: displayValue,
      onClose: onClose,
      disabled: disabled
    });
  }

  return /*#__PURE__*/_react["default"].createElement(_SingleSelector["default"], {
    prefixCls: prefixCls,
    prefixIcon: prefixIcon,
    suffixIcon: suffixIcon,
    displayValue: displayValue
  });
};

var _default = Selector;
exports["default"] = _default;