"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _rcOverflow = _interopRequireDefault(require("rc-overflow"));

var _classnames = _interopRequireDefault(require("classnames"));

var _findIndex = _interopRequireDefault(require("lodash/findIndex"));

var _configProvider = require("../config-provider");

var _tooltip = _interopRequireDefault(require("../tooltip"));

var _ = _interopRequireDefault(require("."));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var RESPONSIVE = 'responsive';

function TagGroup(props, ref) {
  var _props$options = props.options,
      options = _props$options === void 0 ? [] : _props$options,
      children = props.children,
      labelKey = props.labelKey,
      renderRest = props.renderRest,
      _props$maxTagCount = props.maxTagCount,
      maxTagCount = _props$maxTagCount === void 0 ? 'responsive' : _props$maxTagCount,
      className = props.className,
      customizePrefixCls = props.prefixCls;

  var _useContext = (0, _react.useContext)(_configProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var _useState = (0, _react.useState)(),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      tagSize = _useState2[0],
      setTagSize = _useState2[1];

  var defaultRenderRest = function defaultRenderRest() {
    var labels = options;

    if (labelKey) {
      labels = options.map(function (el) {
        return el[labelKey];
      });
    }

    return /*#__PURE__*/_react["default"].createElement(_tooltip["default"], {
      title: labels.join('„ÄÅ')
    }, /*#__PURE__*/_react["default"].createElement(_["default"], {
      size: tagSize
    }, "...\u5171 ", options.length, " \u4E2A"));
  };

  var mergeRenderRest = renderRest || defaultRenderRest;

  var _renderItem = (0, _react.useCallback)(function (item) {
    var index = (0, _findIndex["default"])(options, item);
    var itemNode = children === null || children === void 0 ? void 0 : children(item, index, options);

    if (!tagSize) {
      // Avoid: "Warning: Cannot update a component (`TagGroup`) while rendering a different component (`Item`)."
      setTimeout(function () {
        var _a; // @ts-ignore


        setTagSize(((_a = itemNode === null || itemNode === void 0 ? void 0 : itemNode.props) === null || _a === void 0 ? void 0 : _a.size) || 'default');
      }, 0);
    }

    return itemNode;
  }, [options]);

  var prefixCls = getPrefixCls('tag-group', customizePrefixCls);
  var cls = (0, _classnames["default"])(prefixCls, className);
  var overflowPrefixCls = getPrefixCls('overflow', customizePrefixCls);
  return /*#__PURE__*/_react["default"].createElement("div", {
    ref: ref,
    className: cls
  }, /*#__PURE__*/_react["default"].createElement(_rcOverflow["default"], {
    prefixCls: overflowPrefixCls,
    data: options,
    maxCount: maxTagCount,
    renderItem: function renderItem(item) {
      return _renderItem(item);
    },
    renderRest: mergeRenderRest
  }));
}

var ForwardTagGroup = /*#__PURE__*/_react["default"].forwardRef(TagGroup);

ForwardTagGroup.displayName = 'TagGroup';
var _default = ForwardTagGroup;
exports["default"] = _default;